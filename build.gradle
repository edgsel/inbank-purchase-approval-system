import java.time.Year
import java.nio.file.Files
import java.nio.file.Paths

plugins {
	id "java"
	id "org.springframework.boot" version "3.4.4"
	id "io.spring.dependency-management" version "1.1.7"
}

group = "ee.inbank"
version = "1.0.0"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.liquibase:liquibase-core"
	compileOnly "org.projectlombok:lombok"
	runtimeOnly "org.postgresql:postgresql"
	annotationProcessor "org.projectlombok:lombok"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "com.h2database:h2"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

tasks.named("test") {
	useJUnitPlatform()
}

tasks.register("createChangeDir") {
	group = "Liquibase"
	description = "Creates an empty SQL file for Liquibase migration"

	doLast {
		def currentYear = Year.now().value
		def filename = "${System.currentTimeMillis()}-${project.id}.sql"
		def changelogDir = Paths.get("src/main/resources/db/changelog/${currentYear}")
		def newFilePath = changelogDir.resolve(filename)

		if (!Files.exists(changelogDir)) {
			Files.createDirectories(changelogDir)
		}

		Files.createFile(newFilePath)
		
		def file = file(newFilePath)
		def fileContent = "-- liquibase formatted sql logicalFilePath:classpath:/db/changelog/${currentYear}/${filename} \n-- changeset edgsel"
		def writer = new FileWriter(file)
		
		writer.write(fileContent)
		writer.close()
		logger.quiet("Created a new file: $file")
	}
}
